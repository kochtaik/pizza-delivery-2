services:
  orders:
    build:
      context: .
      dockerfile: ./apps/orders/Dockerfile
      target: development
    command: yarn run start:dev orders
    env_file:
      - ./apps/orders/.env
    depends_on:
      - mongodb
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3000:3000'

  products:
    build:
      context: .
      dockerfile: ./apps/products/Dockerfile
      target: development
    command: yarn run start:dev products
    env_file:
      - ./apps/products/.env
    depends_on:
      - mongodb
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3001:3001'

  cart:
    build:
      context: .
      dockerfile: './apps/cart/Dockerfile'
      target: development
    command: yarn run start:dev cart
    env_file:
      - ./apps/cart/.env
    depends_on:
      - mongodb
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3002:3002'

  mongodb:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password123
    volumes:
      - 'mongodb_master_data:/data/db'
    ports:
      - '27017:27017'

  mongo-express:
    image: mongo-express
    environment:
        - ME_CONFIG_MONGODB_SERVER=mongodb
        - ME_CONFIG_MONGODB_PORT=27017
        - ME_CONFIG_MONGODB_AUTH_USERNAME=root
        - ME_CONFIG_MONGODB_AUTH_PASSWORD=password123
    depends_on:
      - mongodb
    restart: always
    ports:
      - '8081:8081'
  
  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'

volumes:
  mongodb_master_data:
    driver: local